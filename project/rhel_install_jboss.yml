---
- name: Update RHEL VMs with desired packages
  hosts: "{{ HOSTS | default('rhel') }}"
  vars:
    http_proxy_port: 8080
    https_proxy_port: 8443
  tasks:
    - name: Install Java 1.8 and some basic dependencies
      yum: 
        name: "{{ item }}"
        state: present
      with_items:
        - unzip
        - java-11-openjdk
        - libselinux
        - libsemanage
        - firewalld

    - name: Download and unarchive wildfly
      ansible.builtin.unarchive:
        src: "https://github.com/wildfly/wildfly/releases/download/27.0.0.Alpha5/wildfly-27.0.0.Alpha5.zip"
        dest: "/opt"
        remote_src: yes

    - name: Rename install directory
      command: chdir=/opt/ /bin/mv wildfly-27.0.0.Alpha5 wildfly creates=/opt/wildfly

    - name: Add group "wildfly"
      group: 
        name: wildfly

    - name: Add user "jboss"
      user: 
        name: wildfly 
        group: wildfly 
        home: /opt/wildfly

    - name: Change ownership of JBoss installation
      file: 
        path: /opt/wildfly/ 
        owner: wildfly
        group: wildfly
        state: directory
        recurse: yes

    - name: Create /etc/wildfly directory if it does not exist
      ansible.builtin.file:
        path: /etc/wildfly
        state: directory
        mode: '0755'

    - name: Ansible copy file locally.
      copy:
        src: /opt/wildfly/docs/contrib/scripts/systemd/wildfly.conf
        dest: /etc/wildfly/
      delegate_to: localhost


    # - name: Workaround for systemd bug
    #   shell: service jboss start && chkconfig jboss on
    #   become: true
    #   ignore_errors: yes

    # - name: Enable JBoss to be started at boot
    #   service:
    #     name: jboss
    #     enabled: yes
    #     state: started

    # # - name: Make sure jboss service unit is running
    # #   ansible.builtin.systemd:
    # #     state: started
    # #     name: jboss.service
    # #     enabled: yes

    # - name: Just force systemd to reread configs
    #   ansible.builtin.systemd:
    #     daemon_reload: yes

    # - name: Start service firewalld, if not started
    #   ansible.builtin.service:
    #     name: firewalld
    #     state: started

    # - name: Permit traffic in default zone for http service
    #   ansible.posix.firewalld:
    #     service: http
    #     permanent: yes
    #     state: enabled

    # - name: Permit traffic in default zone for https service
    #   ansible.posix.firewalld:
    #     service: https
    #     permanent: yes
    #     state: enabled